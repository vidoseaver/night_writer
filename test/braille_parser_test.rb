gem 'minitest', '~> 5.2'
require 'minitest/autorun'
require 'minitest/pride'
require './lib/library.rb'
require './lib/braille_parser'
require "./lib/braille_converter"

class BrailleParserTest < MiniTest::Test
  def setup
    @first_scenario = BrailleParser.new([".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."])
    @longer_then_160 = BrailleParser.new(over160 = [".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."".....0", "0.00..", "0..0..", "0.000.", "0..0..", "......", ".00...", ".00.0.", "......", "0.....", "......", ".00.0.", ".0000.", "0.000.", ".00...", "00.00.", "0000.."])
  end

  def test_split_string
    assert_equal "should return three arrays with a bunch of dots and 0's", @first_scenario.split_string
  end
end
